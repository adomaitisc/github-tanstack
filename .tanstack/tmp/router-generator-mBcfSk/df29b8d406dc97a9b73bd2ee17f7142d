/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as OwnerRouteImport } from './routes/$owner'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthCallbackRouteImport } from './routes/auth.callback'
import { Route as OwnerRepoRouteImport } from './routes/$owner.$repo'

const OwnerRoute = OwnerRouteImport.update({
  id: '/$owner',
  path: '/$owner',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthCallbackRoute = AuthCallbackRouteImport.update({
  id: '/auth/callback',
  path: '/auth/callback',
  getParentRoute: () => rootRouteImport,
} as any)
const OwnerRepoRoute = OwnerRepoRouteImport.update({
  id: '/$repo',
  path: '/$repo',
  getParentRoute: () => OwnerRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$owner': typeof OwnerRouteWithChildren
  '/$owner/$repo': typeof OwnerRepoRoute
  '/auth/callback': typeof AuthCallbackRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$owner': typeof OwnerRouteWithChildren
  '/$owner/$repo': typeof OwnerRepoRoute
  '/auth/callback': typeof AuthCallbackRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/$owner': typeof OwnerRouteWithChildren
  '/$owner/$repo': typeof OwnerRepoRoute
  '/auth/callback': typeof AuthCallbackRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/$owner' | '/$owner/$repo' | '/auth/callback'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/$owner' | '/$owner/$repo' | '/auth/callback'
  id: '__root__' | '/' | '/$owner' | '/$owner/$repo' | '/auth/callback'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  OwnerRoute: typeof OwnerRouteWithChildren
  AuthCallbackRoute: typeof AuthCallbackRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/$owner': {
      id: '/$owner'
      path: '/$owner'
      fullPath: '/$owner'
      preLoaderRoute: typeof OwnerRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/callback': {
      id: '/auth/callback'
      path: '/auth/callback'
      fullPath: '/auth/callback'
      preLoaderRoute: typeof AuthCallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$owner/$repo': {
      id: '/$owner/$repo'
      path: '/$repo'
      fullPath: '/$owner/$repo'
      preLoaderRoute: typeof OwnerRepoRouteImport
      parentRoute: typeof OwnerRoute
    }
  }
}

interface OwnerRouteChildren {
  OwnerRepoRoute: typeof OwnerRepoRoute
}

const OwnerRouteChildren: OwnerRouteChildren = {
  OwnerRepoRoute: OwnerRepoRoute,
}

const OwnerRouteWithChildren = OwnerRoute._addFileChildren(OwnerRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  OwnerRoute: OwnerRouteWithChildren,
  AuthCallbackRoute: AuthCallbackRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
