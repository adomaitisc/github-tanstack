/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as NotFoundRouteImport } from './routes/not-found'
import { Route as HomeRouteImport } from './routes/home'
import { Route as IndexRouteImport } from './routes/index'
import { Route as OwnerIndexRouteImport } from './routes/$owner/index'
import { Route as AuthSignoutRouteImport } from './routes/auth.signout'
import { Route as AuthCallbackRouteImport } from './routes/auth.callback'
import { Route as OwnerRepoRouteImport } from './routes/$owner/$repo'

const NotFoundRoute = NotFoundRouteImport.update({
  id: '/not-found',
  path: '/not-found',
  getParentRoute: () => rootRouteImport,
} as any)
const HomeRoute = HomeRouteImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const OwnerIndexRoute = OwnerIndexRouteImport.update({
  id: '/$owner/',
  path: '/$owner/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignoutRoute = AuthSignoutRouteImport.update({
  id: '/auth/signout',
  path: '/auth/signout',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthCallbackRoute = AuthCallbackRouteImport.update({
  id: '/auth/callback',
  path: '/auth/callback',
  getParentRoute: () => rootRouteImport,
} as any)
const OwnerRepoRoute = OwnerRepoRouteImport.update({
  id: '/$owner/$repo',
  path: '/$owner/$repo',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/home': typeof HomeRoute
  '/not-found': typeof NotFoundRoute
  '/$owner/$repo': typeof OwnerRepoRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/auth/signout': typeof AuthSignoutRoute
  '/$owner': typeof OwnerIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/home': typeof HomeRoute
  '/not-found': typeof NotFoundRoute
  '/$owner/$repo': typeof OwnerRepoRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/auth/signout': typeof AuthSignoutRoute
  '/$owner': typeof OwnerIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/home': typeof HomeRoute
  '/not-found': typeof NotFoundRoute
  '/$owner/$repo': typeof OwnerRepoRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/auth/signout': typeof AuthSignoutRoute
  '/$owner/': typeof OwnerIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/home'
    | '/not-found'
    | '/$owner/$repo'
    | '/auth/callback'
    | '/auth/signout'
    | '/$owner'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/home'
    | '/not-found'
    | '/$owner/$repo'
    | '/auth/callback'
    | '/auth/signout'
    | '/$owner'
  id:
    | '__root__'
    | '/'
    | '/home'
    | '/not-found'
    | '/$owner/$repo'
    | '/auth/callback'
    | '/auth/signout'
    | '/$owner/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  HomeRoute: typeof HomeRoute
  NotFoundRoute: typeof NotFoundRoute
  OwnerRepoRoute: typeof OwnerRepoRoute
  AuthCallbackRoute: typeof AuthCallbackRoute
  AuthSignoutRoute: typeof AuthSignoutRoute
  OwnerIndexRoute: typeof OwnerIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/not-found': {
      id: '/not-found'
      path: '/not-found'
      fullPath: '/not-found'
      preLoaderRoute: typeof NotFoundRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$owner/': {
      id: '/$owner/'
      path: '/$owner'
      fullPath: '/$owner'
      preLoaderRoute: typeof OwnerIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/signout': {
      id: '/auth/signout'
      path: '/auth/signout'
      fullPath: '/auth/signout'
      preLoaderRoute: typeof AuthSignoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/callback': {
      id: '/auth/callback'
      path: '/auth/callback'
      fullPath: '/auth/callback'
      preLoaderRoute: typeof AuthCallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$owner/$repo': {
      id: '/$owner/$repo'
      path: '/$owner/$repo'
      fullPath: '/$owner/$repo'
      preLoaderRoute: typeof OwnerRepoRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  HomeRoute: HomeRoute,
  NotFoundRoute: NotFoundRoute,
  OwnerRepoRoute: OwnerRepoRoute,
  AuthCallbackRoute: AuthCallbackRoute,
  AuthSignoutRoute: AuthSignoutRoute,
  OwnerIndexRoute: OwnerIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
